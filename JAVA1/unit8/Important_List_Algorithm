package unit8;

import java.util.ArrayList;

public class Important_List_Algorithm {
	//Take a list of integers as parameter. 
	//Return the minimum number in this list.
	 
	public static int minimum(ArrayList<Integer> nums) {
		
		int min = nums.get(0);
		
		for(int i=0; i<nums.size(); i++) {
			if(min>nums.get(i)) {
				min = nums.get(i);
			}
		}
		
		return min;
		
	}
	
	//Take an integer n as parameter. 
	//Return a list containing the first n numbers in the Fibonacci sequence (0, 1, 1, 2, 3, 5, 8, 13...)
	
public static ArrayList<Integer> Fibonacci(int n) {
		
		ArrayList<Integer> Fib = new ArrayList<Integer>();
		
		if(n>=1) {
			Fib.add(0);
		}
		if(n>=2) {
			Fib.add(1);
		}
		if(n>=3) {
			for(int i=2; i<n; i++) {
				Fib.add(Fib.get(i-2)+Fib.get(i-1));
			}
		}
		
		return Fib;
		
	}
	
	
	public static void main(String[] args) {
		ArrayList<Integer> n = new ArrayList<Integer>();
		n.add(1);
		n.add(2);
		n.add(3);
		n.add(0);
		System.out.println(n);
		System.out.println(minimum(n));
		System.out.println(Fibonacci(10));
	}
}
