package unit6;

import java.util.Arrays;

public class EvenMorewith2D {
	// Write a method that takes a 2d array of characters as parameter.
	//Create a string built out of these characters.
	public void arrayToString(char letters[][]) {
		String str="";
		for(int i=0; i<letters.length; i++) {
			for(int j=0; j<letters[i].length; j++) {
				str += letters[i][j];
			}
		}
		System.out.println(str);
	}
	
	
	//Write a method that takes an integer n as parameter.
	//Create a 2d array holding an nxn triangle of consecutive numbers starting at 1.
	
	public void nXn(int n) {
		int[][]arr = new int[4][];
		int rowcounter = 1;
		int num = 1;
		for(int i=0; i<n; i++) {
			arr[i] = new int [rowcounter];
			for(int j=0; j<rowcounter; j++) {
				arr[i][j]  = num;
				num++;
			}
			rowcounter++;
		}
		System.out.println(Arrays.deepToString(arr));
	}
	
	//Write a method that takes a 2d array of integers as parameter. 
	//Create a 2d array that contains the same number of rows, but twice as many columns, 
	//alternating 0's and elements from the parameter array.
	public void twicelength(int [][] arr){
		int count = 0;
		int[][]newarr = new int[arr.length][];
		for(int i=0; i<newarr.length; i++) {
			count = 0;
			newarr[i] = new int [arr[i].length*2];
			for(int j=0; j<newarr[i].length; j++) {
				if(j % 2 != 0) {
					newarr[i][j] = 0;
				}else {
					newarr[i][j] = arr[i][count];
					count++;
				}
			}
		}
		System.out.println(Arrays.deepToString(newarr));
	}
	
	// Write a method that takes a 2d array of doubles as parameter.
	//Your method should reverse each row in the array. 
	public void reverse(double[][] arr) {
		double[][]newarr = new double[arr.length][];
		for(int i=0; i<newarr.length; i++) {
			newarr[i] = new double [arr[i].length];
			for(int j=0; j<newarr[i].length;j++) {
				newarr[i][j] = arr[i][newarr[i].length-1-j];
			}
		}
		System.out.println(Arrays.deepToString(newarr));
	}
	
	//Write a method that takes a 2d array of doubles as a parameter.
	//Your method should create a new 1d array containing the sum of each column. 
	public void sum(double[][] arr) {
		double sumofRow = 0;
		double[] sum = new double[arr.length];
		for(int i=0; i<sum.length; i++ ) {
			sumofRow = 0;
			for(int j=0; j<arr[i].length; j++) {
				sumofRow += arr[i][j];
			}
			sum[i] = sumofRow;
		}
		System.out.println(Arrays.toString(sum));
	}
	
	//Write a method that sorts a 2d array of integers.
	//I solved this question with 2 ways.
	//first way is sorting every thing in single row
	public void sort_row(int[][] arr) {
		int temp;
		for(int a=0; a<arr.length; a++) {
			boolean didswap = false;
			for(int i=0; i<arr.length; i++) {
				for(int j=0; j<arr[i].length-1; j++) {
					if(arr[i][j]>arr[i][j+1]) {
						temp = arr[i][j+1];
						arr[i][j+1]=arr[i][j];
						arr[i][j]=temp;
						didswap = true;
					}
				}
				if(!didswap) {
					break;
				}
			}
		}
		System.out.println(Arrays.deepToString(arr));
	}
	
	//second way is to sort every thing in the 2d array
	public void sort_whole(int[][] arr) {
		int temp;
		int arraylength = 0; 
		
		for(int i=0; i<arr.length;i++) { // count the length of the whole 2d array
			arraylength += arr[i].length;
		}
		
		int[]temparr  = new int[arraylength]; // make new 1d array
		int counter = 0;
		
		for(int i=0; i<arr.length; i++) { // fill the 1d array with everything in the 2d array
			for(int j=0; j<arr[i].length; j++) {
				temparr[counter] = arr[i][j];
				counter ++; 
			}
		}
		
		for(int i=0; i<arraylength; i++) { // sort the 1d array 
			boolean didswap = false;
			for(int j=0; j<arraylength-1; j++) {
				if(temparr[j] > temparr[j+1]) {
					temp = temparr[j+1];
					temparr[j+1]=temparr[j];
					temparr[j]=temp;
					didswap = true;
				}
			}	
			if(!didswap) {
				break;
			}
		}
		
		counter =0;
		for(int i=0; i<arr.length; i++) { // refill the 2d array with sorted 1d array
			for(int j=0; j<arr[i].length; j++) {
				arr[i][j] = temparr[counter];
				counter++;
			}
		}
		
		System.out.println(Arrays.deepToString(arr));
		
	}
	
	public static void main(String[] args) {
		EvenMorewith2D runner = new EvenMorewith2D();
		char[][] arr = {{'h','e'},{'l','l','o'}};
		int [][] arr1 = {{1,2,3},{4,5,6}};
		double [][] arr2 = {{1.2,1.3,1.4},{2.2,2.3,2.4,2.5}};
		int [][]arr3 = {{1,9,10,2},{3,7,2,8}};
		runner.arrayToString(arr);
		runner.nXn(4);
		runner.twicelength(arr1);
		runner.reverse(arr2);
		runner.sum(arr2);
		runner.sort_row(arr3);
		runner.sort_whole(arr3);
	}
}
